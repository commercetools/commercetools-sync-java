name: CI

on: [push]

jobs:
  checks:
    name: Code Checks
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
      - name: Generate Dependency Updates Report
        run: ./gradlew clean dependencyUpdates
      - name: Code formatting
        run: ./gradlew spotlessCheck
      - name: PMD
        run: ./gradlew pmdBenchmark pmdIntegrationTest pmdMain pmdTest
      - name: Spotbugs
        run: ./gradlew spotbugsBenchmark spotbugsIntegrationTest spotbugsMain spotbugsTest
      - name: mkdocsBuild
        run: ./gradlew mkdocsBuild
  benchmark_tests:
    name: benchmark tests
    concurrency: benchmark_tests
    runs-on: ubuntu-latest
    env:
      SOURCE_PROJECT_KEY: java-sync-target-dev2
      SOURCE_CLIENT_ID: ${{ secrets.TARGET_CLIENT_ID_2 }}
      SOURCE_CLIENT_SECRET: ${{ secrets.TARGET_CLIENT_SECRET_2 }}
      TARGET_PROJECT_KEY: java-sync-target-dev2
      TARGET_CLIENT_ID: ${{ secrets.TARGET_CLIENT_ID_2 }}
      TARGET_CLIENT_SECRET: ${{ secrets.TARGET_CLIENT_SECRET_2 }}
      GRGIT_USER: ${{ secrets.GRGIT_USER }}
      GITHUB_ACTION_COMMIT: ${{github.sha}}
      SUBMIT_BENCHMARK_RESULT: true
    steps:
      - name: Git Checkout
        uses: actions/checkout@v3
      - name: Fetch Library version
        id: vars
        run: echo ::set-output name=libVersion::${GITHUB_REF#refs/*/}
      - name: benchmark test
        if: ${{ success() }}
        run: ./gradlew clean setLibraryVersion benchmark benchmarkCommit
        env:
          GITHUB_TAG: ${{ steps.vars.outputs.libVersion }}
