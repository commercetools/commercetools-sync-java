name: DEPLOY

on:
  release:
    types: [published]

jobs:
  benchmark_tests:
    name: benchmark tests
    runs-on: ubuntu-latest
    env:
      SOURCE_PROJECT_KEY: java-sync-source
      SOURCE_CLIENT_ID: ${{ secrets.SOURCE_CLIENT_ID }}
      SOURCE_CLIENT_SECRET: ${{ secrets.SOURCE_CLIENT_SECRET }}
      TARGET_PROJECT_KEY: java-sync-target
      TARGET_CLIENT_ID: ${{ secrets.TARGET_CLIENT_ID }}
      TARGET_CLIENT_SECRET: ${{ secrets.TARGET_CLIENT_SECRET }}
      CI_BUILD_DIR: '/commercetools/commercetools-sync-java'
      GRGIT_USER: ${{ secrets.GRGIT_USER }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: benchmark test
        if: success()
        run: ./gradlew clean setLibraryVersion #benchmark benchmarkCommit

  deployment:
    name: deployment
    needs: benchmark_tests
    if: ${{ success() }}
    runs-on: ubuntu-latest
    env:
      BINTRAY_USER: commercetools
      BINTRAY_KEY: ${{ secrets.BINTRAY_KEY }}
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: status
        run: echo Build is tagged. Uploading artifact ${{ steps.vars.outputs.tag }} to Bintray.
      # - name: Publish GitHub Pages
      #   run: ./gradlew --info -Dbuild.version="${{ steps.vars.outputs.tag }}" mkdocsPublish
      - name: Upload Artifacts to Bintray
        run: ./gradlew --info -Dbuild.version="${{ steps.vars.outputs.tag }}" bintrayUpload
      - name: Slack notification
        if: success() # only when previous step succeeds
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: Github Release Action.
          SLACK_CHANNEL: java-sync
        uses: Ilshidur/action-slack@master
        with:
          args: 'Version: ${{ steps.vars.outputs.tag }} of the library is released :tada: :tada:'
