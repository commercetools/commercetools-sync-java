tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
    testLogging {
        exceptionFormat "full"
        showCauses true
        showExceptions true
        showStackTraces true
    }

    /**
     * Logging style of tests.
     * Inspired by: https://github.com/mendhak/Gradle-Travis-Colored-Output
     */

    boolean TRAVIS_FOLDING = System.getenv('TRAVIS_FOLDING') ? System.getenv('TRAVIS_FOLDING') : false
    String ANSI_BOLD_WHITE = "\u001B[0;1m"
    String ANSI_RESET = "\u001B[0m"
    String ANSI_RED = "\u001B[31m"
    String ANSI_GREEN = "\u001B[32m"
    String ANSI_YELLOW = "\u001B[33m"
    String ANSI_WHITE = "\u001B[37m"
    String TEST_SUCCEEDED_EMOJI = "\u2713"
    String TEST_SKIPPED_EMOJI = "⚠️"
    String TEST_FAILED_EMOJI = "❌"

    beforeSuite { suite ->
        if (suite.name.startsWith("Test Run") || suite.name.startsWith("Gradle Worker")) return

        if(suite.parent != null && suite.className != null){
            if(TRAVIS_FOLDING){ out.println("travis_fold:start:" + suite.name +"\r") }
            out.println(ANSI_BOLD_WHITE + suite.name + ANSI_RESET )
        }

    }
    afterTest { descriptor, result ->
        def indicator = ANSI_WHITE

        if (result.failedTestCount > 0) indicator = ANSI_RED + TEST_FAILED_EMOJI
        else if (result.skippedTestCount > 0) indicator = ANSI_YELLOW + TEST_SKIPPED_EMOJI
        else indicator = ANSI_GREEN + TEST_SUCCEEDED_EMOJI

        out.println('    ' + indicator + ANSI_RESET + "  " + descriptor.name)
    }

    afterSuite { desc, result ->
        if(desc.parent != null && desc.className != null){

            if(TRAVIS_FOLDING && result.failedTestCount==0) {
                out.println("travis_fold:end:" + desc.name +"\r")
            }
            out.println("")
        }


        if (!desc.parent) { // will match the outermost suite
            def failStyle = ANSI_RED
            def skipStyle = ANSI_YELLOW
            def summaryStyle = ANSI_WHITE

            switch(result.resultType){
                case TestResult.ResultType.SUCCESS:
                    summaryStyle = ANSI_GREEN
                    break
                case TestResult.ResultType.FAILURE:
                    summaryStyle = ANSI_RED
                    break
            }

            out.println( "------------------------------------------------------------------------------------------------")
            out.println( "Results of ${desc.name}: " + summaryStyle + "${result.resultType}" + ANSI_RESET
                    + " (${result.testCount} tests, "
                    + ANSI_GREEN + "${result.successfulTestCount} passed" + " " + TEST_SUCCEEDED_EMOJI + " " + ANSI_RESET
                    + ", " + failStyle + "${result.failedTestCount} failed" + " " + TEST_FAILED_EMOJI + " " + ANSI_RESET
                    + ", " + skipStyle + "${result.skippedTestCount} skipped" + " " + TEST_SKIPPED_EMOJI + " " + ANSI_RESET
                    + ")")
            out.println( "------------------------------------------------------------------------------------------------")
        }
    }

}